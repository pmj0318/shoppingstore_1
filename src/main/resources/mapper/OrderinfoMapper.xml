<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.OrderinfoMapper" >
  <resultMap id="BaseResultMap" type="entity.Orderinfo" >
    <id column="O_ID" property="oId" jdbcType="DECIMAL" />
    <result column="USERID" property="userid" jdbcType="DECIMAL" />
    <result column="STATUS" property="status" jdbcType="DECIMAL" />
    <result column="ORDERTIME" property="ordertime" jdbcType="VARCHAR" />
    <result column="PID" property="pid" jdbcType="DECIMAL" />
  </resultMap>

  <resultMap id="BaseResultMap2" type="entity.Orderinfo" >
  <id column="O_ID" property="oId" jdbcType="DECIMAL" />
  <result column="USERID" property="userid" jdbcType="DECIMAL" />
  <result column="STATUS" property="status" jdbcType="DECIMAL" />
  <result column="ORDERTIME" property="ordertime" jdbcType="VARCHAR" />
  <result column="PID" property="pid" jdbcType="DECIMAL" />

  <!--infodetail表想要加字段,就是要在实体类里面就是加字段,就是自己定义-->
  <result column="OD_NUM" property="odNum" jdbcType="DECIMAL" />
  <result column="P_ID" property="pId" jdbcType="DECIMAL" />
  </resultMap>

  <resultMap id="BaseResultMap3" type="entity.Orderinfo" >
    <id column="O_ID" property="oId" jdbcType="DECIMAL" />
    <result column="USERID" property="userid" jdbcType="DECIMAL" />
    <result column="STATUS" property="status" jdbcType="DECIMAL" />
    <result column="ORDERTIME" property="ordertime" jdbcType="VARCHAR" />
    <result column="PID" property="pid" jdbcType="DECIMAL" />

    <!--infodetail表想要加字段,就是要在实体类里面就是加字段,就是自己定义-->
    <result column="OD_NUM" property="odNum" jdbcType="DECIMAL" />
    <result column="P_ID" property="pId" jdbcType="DECIMAL" />

    <!--productinfo就是在这个这个字段就是在用来查询产品表,-->
    <result column="P_TYPE" property="pType" jdbcType="VARCHAR" />
    <result column="PRICE" property="price" jdbcType="DECIMAL" />
    <result column="BRAND" property="brand" jdbcType="VARCHAR" />

  </resultMap>


  <sql id="Base_Column_List" >
    O_ID, USERID, STATUS, ORDERTIME, PID
  </sql>

  <sql id="Base_Column_List2" >
    O_ID, USERID, STATUS, ORDERTIME, PID,P_ID, OD_NUM
  </sql>

  <sql id="Base_Column_List3" >
    O_ID, USERID, STATUS, ORDERTIME, PID,P_ID, OD_NUM,P_TYPE, BRAND,PRICE
  </sql>

<!--就是待发货的查询语句,用到的是两张表,就是要添加字段在实体类中otderinfo-->
<select id="selectAllUndeliverOrders" resultMap="BaseResultMap2" >
/*就是单独一个orderdetail的查询*/
 <!-- select <include refid="Base_Column_List" /> from ORDERINFO where STATUS ='0'order by O_ID-->
  /*就是两张表一起查询orderdetail 和orderinfo*/
  select <include refid="Base_Column_List2" /> from ORDERINFO  a,  ORDERDETAIL b where a.PID = b.OD_ID and status =0 order by O_ID

</select>


  <!--退货商品,就是联合produncinfo的表的拆查询语句，2退货,3是修改完已处理退货-->
  <select id="selectAllReturnGoods" resultMap="BaseResultMap3">
/*select * from orderinfo  a,  orderdetail b ,productinfo p where  a.pid = b.od_id and b.p_id =p.p_id and a.status =2
*/
    select oi.O_ID, oi.USERID, oi.STATUS, oi.ORDERTIME, oi.PID, odi.OD_NUM ,pi.P_TYPE, pi.BRAND,pi.PRICE
    from   orderinfo oi left  join  orderdetail odi on  oi.PID = odi.OD_ID left  join  productinfo pi on  odi.P_ID =pi.P_ID
     where oi.status = 2 or oi.status = 3 order by O_ID
</select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ORDERINFO
    where O_ID = #{oId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ORDERINFO
    where O_ID = #{oId,jdbcType=DECIMAL}
  </delete>
  <insert id="insert" parameterType="entity.Orderinfo" >

    <selectKey keyProperty="oId" order="BEFORE" resultType="int">
      select seq_orderinfo_o_id.nextval from dual
    </selectKey>

    insert into ORDERINFO (O_ID, USERID, STATUS, 
      ORDERTIME, PID)
    values (#{oId,jdbcType=DECIMAL}, #{userid,jdbcType=DECIMAL}, #{status,jdbcType=DECIMAL}, 
      #{ordertime,jdbcType=VARCHAR}, #{pid,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="entity.Orderinfo" >

    <selectKey keyProperty="uId" order="BEFORE" resultType="int">
      select seq_orderinfo_o_id.nextval from dual
    </selectKey>

    insert into ORDERINFO
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="oId != null" >
        O_ID,
      </if>
      <if test="userid != null" >
        USERID,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="ordertime != null" >
        ORDERTIME,
      </if>
      <if test="pid != null" >
        PID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="oId != null" >
        #{oId,jdbcType=DECIMAL},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=DECIMAL},
      </if>
      <if test="ordertime != null" >
        #{ordertime,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Orderinfo" >

    update ORDERINFO
    <set >
      <if test="userid != null" >
        USERID = #{userid,jdbcType=DECIMAL},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=DECIMAL},
      </if>
      <if test="ordertime != null" >
        ORDERTIME = #{ordertime,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        PID = #{pid,jdbcType=DECIMAL},
      </if>
    </set>
    where O_ID = #{oId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Orderinfo" >
    update ORDERINFO
    set USERID = #{userid,jdbcType=DECIMAL},
      STATUS = #{status,jdbcType=DECIMAL},
      ORDERTIME = #{ordertime,jdbcType=VARCHAR},
      PID = #{pid,jdbcType=DECIMAL}
    where O_ID = #{oId,jdbcType=DECIMAL}
  </update>
</mapper>